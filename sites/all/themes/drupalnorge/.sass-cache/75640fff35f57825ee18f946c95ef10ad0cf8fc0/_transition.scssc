3.2.12 (Media Mark)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@options{ :
@linei:@has_childrenT:@children[o:Sass::Tree::ImportNode:@imported_file0;0:@imported_filename"shared;@;i;
[ o:Sass::Tree::CommentNode
:@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;@:
@type:silent;i;
[ o:Sass::Tree::VariableNode:@guarded"!default;@:
@name" default-transition-property;i:
@expro:Sass::Script::String	;"all;@;:identifier;i;
[ o;;"!default;@;" default-transition-duration;i;o:Sass::Script::Number;i;@:@denominator_units[ ;i:@numerator_units["s:@original"1s;
[ o;;"!default;@;" default-transition-function;i;o:Sass::Script::Bool;F;@;i;
[ o;;"!default;@;"default-transition-delay;i;o;;F;@;i;
[ o;;"!default;@;"#transitionable-prefixed-values;i;o:Sass::Script::List	:@separator:
comma;[o;	;"transform;@;;;io;	;"transform-origin;@;;;i;@;i;
[ o;
;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;@;;;i!;
[ o:Sass::Tree::MixinDefNode:
@args[[o:Sass::Script::Variable:@underscored_name"property_1;@;"property-1o;"	;#" default_transition_property;@;" default-transition-property;i&[o;";#"property_2;@;"property-2o;;F;@;i'[o;";#"property_3;@;"property-3o;;F;@;i([o;";#"property_4;@;"property-4o;;F;@;i)[o;";#"property_5;@;"property-5o;;F;@;i*[o;";#"property_6;@;"property-6o;;F;@;i+[o;";#"property_7;@;"property-7o;;F;@;i,[o;";#"property_8;@;"property-8o;;F;@;i-[o;";#"property_9;@;"property-9o;;F;@;i.[o;";#"property_10;@;"property-10o;;F;@;i/;@;"transition-property;i0;	T;
[u:Sass::Tree::IfNodeÙ[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"property_1:@options{ :
@name"property-1:
@linei1:@keywords{ ;@;"type-of;i1:@splat0;@:@operator:eq;i1:@operand2o:Sass::Script::String	:@value"string;@:
@type:identifier;i10[o:Sass::Tree::VariableNode:@guarded0;@;"property-1;i1:
@expro;;[o;		;
"property_1;@;"property-1;i1;{ ;@;"unquote;i1;0:@children[ o;;0;@;"properties;i2;o:Sass::Script::Funcall;![o;"	;#"property_1;@;"property-1;i2o;"	;#"property_2;@;"property-2;i2o;"	;#"property_3;@;"property-3;i2o;"	;#"property_4;@;"property-4;i2o;"	;#"property_5;@;"property-5;i2o;"	;#"property_6;@;"property-6;i2o;"	;#"property_7;@;"property-7;i2o;"	;#"property_8;@;"property-8;i2o;"	;#"property_9;@;"property-9;i2o;"	;#"property_10;@;"property-10;i2:@keywords{ ;@;"compact;i2:@splat0;
[ u;$Å[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:@options{ :
@name"$experimental-support-for-webkit:
@linei30[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall:
@args[o:Sass::Script::String	;"-webkit;@:
@type:identifier;	i3o; 	;"properties;@;"properties;	i3:@keywords{ ;@;"prefixed-for-transition;	i3:@splat0;@;[" -webkit-transition-property;	i3:@prop_syntax:new:@children[ :
@tabsi u;$Á[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:@options{ :
@name"%experimental-support-for-mozilla:
@linei40[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall:
@args[o:Sass::Script::String	;"	-moz;@:
@type:identifier;	i4o; 	;"properties;@;"properties;	i4:@keywords{ ;@;"prefixed-for-transition;	i4:@splat0;@;["-moz-transition-property;	i4:@prop_syntax:new:@children[ :
@tabsi u;$¹[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:@options{ :
@name"#experimental-support-for-opera:
@linei50[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall:
@args[o:Sass::Script::String	;"-o;@:
@type:identifier;	i5o; 	;"properties;@;"properties;	i5:@keywords{ ;@;"prefixed-for-transition;	i5:@splat0;@;["-o-transition-property;	i5:@prop_syntax:new:@children[ :
@tabsi o:Sass::Tree::PropNode;o;"	;#"properties;@;"properties;i6;@;["transition-property;i6:@prop_syntax:new;
[ :
@tabsi ;'0o;
;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;@;;;i9;
[ o; ;![[o;";#"duration_1;@;"duration-1o;"	;#" default_transition_duration;@;" default-transition-duration;i>[o;";#"duration_2;@;"duration-2o;;F;@;i?[o;";#"duration_3;@;"duration-3o;;F;@;i@[o;";#"duration_4;@;"duration-4o;;F;@;iA[o;";#"duration_5;@;"duration-5o;;F;@;iB[o;";#"duration_6;@;"duration-6o;;F;@;iC[o;";#"duration_7;@;"duration-7o;;F;@;iD[o;";#"duration_8;@;"duration-8o;;F;@;iE[o;";#"duration_9;@;"duration-9o;;F;@;iF[o;";#"duration_10;@;"duration-10o;;F;@;iG;@;"transition-duration;iH;	T;
[u;$Ù[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"duration_1:@options{ :
@name"duration-1:
@lineiI:@keywords{ ;@;"type-of;iI:@splat0;@:@operator:eq;iI:@operand2o:Sass::Script::String	:@value"string;@:
@type:identifier;iI0[o:Sass::Tree::VariableNode:@guarded0;@;"duration-1;iI:
@expro;;[o;		;
"duration_1;@;"duration-1;iI;{ ;@;"unquote;iI;0:@children[ o;;0;@;"durations;iJ;o;%;![o;"	;#"duration_1;@;"duration-1;iJo;"	;#"duration_2;@;"duration-2;iJo;"	;#"duration_3;@;"duration-3;iJo;"	;#"duration_4;@;"duration-4;iJo;"	;#"duration_5;@;"duration-5;iJo;"	;#"duration_6;@;"duration-6;iJo;"	;#"duration_7;@;"duration-7;iJo;"	;#"duration_8;@;"duration-8;iJo;"	;#"duration_9;@;"duration-9;iJo;"	;#"duration_10;@;"duration-10;iJ;&{ ;@;"compact;iJ;'0;
[ o:Sass::Tree::MixinNode;![o;	;"transition-duration;@;;;iKo;"	;#"durations;@;"durations;iKo;	;"	-moz;@;;;iLo;	;"-webkit;@;;;iLo;	;"-o;@;;;iLo:!Sass::Script::UnaryOperation	;@:@operando;	;"-ms;@;;;iL:@operator:not;iLo;-	;@;.o;	;"-khtml;@;;;iL;/;0;iLo;	;"official;@;;;iL;&{ ;@;"experimental;iM;
[ ;'0;'0o;
;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;@;;;iP;
[ o; ;![[o;";#"function_1;@;"function-1o;"	;#" default_transition_function;@;" default-transition-function;iV[o;";#"function_2;@;"function-2o;;F;@;iW[o;";#"function_3;@;"function-3o;;F;@;iX[o;";#"function_4;@;"function-4o;;F;@;iY[o;";#"function_5;@;"function-5o;;F;@;iZ[o;";#"function_6;@;"function-6o;;F;@;i[[o;";#"function_7;@;"function-7o;;F;@;i\[o;";#"function_8;@;"function-8o;;F;@;i][o;";#"function_9;@;"function-9o;;F;@;i^[o;";#"function_10;@;"function-10o;;F;@;i_;@;"transition-timing-function;i`;	T;
[o;;0;@;"function-1;ia;o;%;![o;"	;#"function_1;@;"function-1;ia;&{ ;@;"unquote;ia;'0;
[ o;;0;@;"functions;ib;o;%;![o;"	;#"function_1;@;"function-1;ibo;"	;#"function_2;@;"function-2;ibo;"	;#"function_3;@;"function-3;ibo;"	;#"function_4;@;"function-4;ibo;"	;#"function_5;@;"function-5;ibo;"	;#"function_6;@;"function-6;ibo;"	;#"function_7;@;"function-7;ibo;"	;#"function_8;@;"function-8;ibo;"	;#"function_9;@;"function-9;ibo;"	;#"function_10;@;"function-10;ib;&{ ;@;"compact;ib;'0;
[ o;,;![o;	;"transition-timing-function;@;;;ico;"	;#"functions;@;"functions;ico;	;"	-moz;@;;;ido;	;"-webkit;@;;;ido;	;"-o;@;;;ido;-	;@;.o;	;"-ms;@;;;id;/;0;ido;-	;@;.o;	;"-khtml;@;;;id;/;0;ido;	;"official;@;;;id;&{ ;@;"experimental;ie;
[ ;'0;'0o;
;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;@;;;ih;
[ o; ;![[o;";#"delay_1;@;"delay-1o;"	;#"default_transition_delay;@;"default-transition-delay;im[o;";#"delay_2;@;"delay-2o;;F;@;in[o;";#"delay_3;@;"delay-3o;;F;@;io[o;";#"delay_4;@;"delay-4o;;F;@;ip[o;";#"delay_5;@;"delay-5o;;F;@;iq[o;";#"delay_6;@;"delay-6o;;F;@;ir[o;";#"delay_7;@;"delay-7o;;F;@;is[o;";#"delay_8;@;"delay-8o;;F;@;it[o;";#"delay_9;@;"delay-9o;;F;@;iu[o;";#"delay_10;@;"delay-10o;;F;@;iv;@;"transition-delay;iw;	T;
[u;$Ê[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"delay_1:@options{ :
@name"delay-1:
@lineix:@keywords{ ;@;"type-of;ix:@splat0;@:@operator:eq;ix:@operand2o:Sass::Script::String	:@value"string;@:
@type:identifier;ix0[o:Sass::Tree::VariableNode:@guarded0;@;"delay-1;ix:
@expro;;[o;		;
"delay_1;@;"delay-1;ix;{ ;@;"unquote;ix;0:@children[ o;;0;@;"delays;iy;o;%;![o;"	;#"delay_1;@;"delay-1;iyo;"	;#"delay_2;@;"delay-2;iyo;"	;#"delay_3;@;"delay-3;iyo;"	;#"delay_4;@;"delay-4;iyo;"	;#"delay_5;@;"delay-5;iyo;"	;#"delay_6;@;"delay-6;iyo;"	;#"delay_7;@;"delay-7;iyo;"	;#"delay_8;@;"delay-8;iyo;"	;#"delay_9;@;"delay-9;iyo;"	;#"delay_10;@;"delay-10;iy;&{ ;@;"compact;iy;'0;
[ o;,;![o;	;"transition-delay;@;;;izo;"	;#"delays;@;"delays;izo;	;"	-moz;@;;;i{o;	;"-webkit;@;;;i{o;	;"-o;@;;;i{o;-	;@;.o;	;"-ms;@;;;i{;/;0;i{o;-	;@;.o;	;"-khtml;@;;;i{;/;0;i{o;	;"official;@;;;i{;&{ ;@;"experimental;i|;
[ ;'0;'0o;
;["*/* Transition all-in-one shorthand */;@;;;i;
[ o; ;![	[o;";#"property;@;"propertyo;"	;#" default_transition_property;@;" default-transition-property;i}[o;";#"duration;@;"durationo;"	;#" default_transition_duration;@;" default-transition-duration;i~[o;";#"function;@;"functiono;"	;#" default_transition_function;@;" default-transition-function;i[o;";#"
delay;@;"
delayo;"	;#"default_transition_delay;@;"default-transition-delay;i;@;"single-transition;i;	T;
[o;,;![o;%;![o;	;:
space;[	o;"	;#"property;@;"property;io;"	;#"duration;@;"duration;io;"	;#"function;@;"function;io;"	;#"
delay;@;"
delay;i;@;i;&{ ;@;"compact;i;'0;&{ ;@;"transition;i;
[ ;'0;'0o; ;![[o;";#"transition_1;@;"transition-1o;	;"default;@;;;i[o;";#"transition_2;@;"transition-2o;;F;@;i[o;";#"transition_3;@;"transition-3o;;F;@;i[o;";#"transition_4;@;"transition-4o;;F;@;i[o;";#"transition_5;@;"transition-5o;;F;@;i[o;";#"transition_6;@;"transition-6o;;F;@;i[o;";#"transition_7;@;"transition-7o;;F;@;i[o;";#"transition_8;@;"transition-8o;;F;@;i[o;";#"transition_9;@;"transition-9o;;F;@;i[o;";#"transition_10;@;"transition-10o;;F;@;i;@;"transition;i;	T;
[u;$÷[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_name"transition_1:@options{ :
@name"transition-1:
@linei;	@	:@operator:eq;i:@operand2o:Sass::Script::String	:@value"default;	@	:
@type:identifier;i0[o:Sass::Tree::VariableNode:@guarded0;	@	;
"transition-1;i:
@expro:Sass::Script::Funcall:
@args[o:Sass::Script::List	:@separator:
space;[	o;	;" default_transition_property;	@	;
" default-transition-property;io;	;" default_transition_duration;	@	;
" default-transition-duration;io;	;" default_transition_function;	@	;
" default-transition-function;io;	;"default_transition_delay;	@	;
"default-transition-delay;i;	@	;i:@keywords{ ;	@	;
"compact;i:@splat0:@children[ o;;0;@;"transitions;i;o;;F;@;i;
[ u;$[o:Sass::Script::Operation
:@operand1o; 
;o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"transition_1:@options{ :
@name"transition-1:
@linei:@keywords{ ;@;"type-of;i:@splat0;@:@operator:eq;i:@operand2o:Sass::Script::String	:@value"	list;@:
@type:identifier;i;@;:and;i;o; 
;o;;[o;;[o;		;
"transition_1;@;"transition-1;io:Sass::Script::Number;i;@:@denominator_units[ ;i:@numerator_units[ :@original"1;{ ;@;"nth;i;0;{ ;@;"type-of;i;0;@;;;i;o;	;"	list;@;;;iu:Sass::Tree::IfNode¤[00[o:Sass::Tree::VariableNode:@guarded0:@options{ :
@name"transitions:
@linei:
@expro:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"transition_1;@;"transition-1;	io;	;"transition_2;@;"transition-2;	io;	;"transition_3;@;"transition-3;	io;	;"transition_4;@;"transition-4;	io;	;"transition_5;@;"transition-5;	io;	;"transition_6;@;"transition-6;	io;	;"transition_7;@;"transition-7;	io;	;"transition_8;@;"transition-8;	io;	;"transition_9;@;"transition-9;	io;	;"transition_10;@;"transition-10;	i:@keywords{ ;@;"compact;	i:@splat0:@children[ [o:Sass::Tree::VariableNode:@guarded0;@;"transitions;i:
@expro;;[o;		;
"transition_1;@;"transition-1;io;;[o;		;
"transition_2;@;"transition-2;io;		;
"transition_3;@;"transition-3;io;		;
"transition_4;@;"transition-4;io;		;
"transition_5;@;"transition-5;io;		;
"transition_6;@;"transition-6;io;		;
"transition_7;@;"transition-7;io;		;
"transition_8;@;"transition-8;io;		;
"transition_9;@;"transition-9;io;		;
"transition_10;@;"transition-10;i;{ ;@;"compact;i;0o;	;"
comma;@;;;i;{ ;@;"	join;i;0:@children[ o;;0;@;"delays;i;o;%;![ ;&{ ;@;"comma-list;i;'0;
[ o;;0;@;"has-delays;i;o;;F;@;i;
[ o;;0;@;"webkit-value;i;o;%;![ ;&{ ;@;"comma-list;i;'0;
[ o;;0;@;"moz-value;i;o;%;![ ;&{ ;@;"comma-list;i;'0;
[ o;;0;@;"o-value;i;o;%;![ ;&{ ;@;"comma-list;i;'0;
[ o;
;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;@;;;i ;
[ o:Sass::Tree::EachNode;@;i¢:	@var"transition;	T;
[o;
;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;@;;;i£;
[ o;;0;@;"property;i¥;o;%;![o;"	;#"transition;@;"transition;i¥o;;i;@;[ ;i¥;[ ;"1;&{ ;@;"nth;i¥;'0;
[ o;;0;@;"duration;i¦;o;;F;@;i¦;
[ o;;0;@;"timing-function;i§;o;;F;@;i§;
[ o;;0;@;"
delay;i¨;o;;F;@;i¨;
[ u;$[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"transition:@options{ :
@name"transition:
@linei©:@keywords{ ;@;"length;i©:@splat0;@:@operator:gt;i©:@operand2o:Sass::Script::Number:@valuei;@:@denominator_units[ ;i©:@numerator_units[ :@original"10[o:Sass::Tree::VariableNode:@guarded0;@;"duration;i©:
@expro;;[o;		;
"transition;@;"transition;i©o;;i;@;@;i©;[ ;"2;{ ;@;"nth;i©;0:@children[ u;$[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"transition:@options{ :
@name"transition:
@lineiª:@keywords{ ;@;"length;iª:@splat0;@:@operator:gt;iª:@operand2o:Sass::Script::Number:@valuei;@:@denominator_units[ ;iª:@numerator_units[ :@original"20[o:Sass::Tree::VariableNode:@guarded0;@;"timing-function;iª:
@expro;;[o;		;
"transition;@;"transition;iªo;;i;@;@;iª;[ ;"3;{ ;@;"nth;iª;0:@children[ u;$Y[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"transition:@options{ :
@name"transition:
@linei«:@keywords{ ;@;"length;i«:@splat0;@:@operator:gt;i«:@operand2o:Sass::Script::Number:@valuei;@:@denominator_units[ ;i«:@numerator_units[ :@original"30[o:Sass::Tree::VariableNode:@guarded0;@;"
delay;i«:
@expro;;[o;		;
"transition;@;"transition;i«o;;i	;@;@;i«;[ ;"4;{ ;@;"nth;i«;0:@children[ o;;0;@;"has-delays;i«;o:Sass::Script::Bool;T;@;i«;[ o;
;[";/* If a delay is provided without a timing function */;@;;;i­;
[ u;$g[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"timing_function:@options{ :
@name"timing-function:
@linei®:@keywords{ ;@;"is-time;i®:@splat0;@:@operator:and;i®:@operand2o:!Sass::Script::UnaryOperation	;@:@operando;		;
"
delay;@;"
delay;i®;:not;i®0[o:Sass::Tree::VariableNode:@guarded0;@;"
delay;i®:
@expro;		;
"timing_function;@;"timing-function;i®:@children[ o;;0;@;"timing-function;i®;o:Sass::Script::Bool:@valueF;@;i®;[ o;;0;@;"has-delays;i®;o;;T;@;i®;[ o;
;["9/* Keep a list of delays in case one is specified */;@;;;i°;
[ o;;0;@;"delays;i±;o;%;![o;"	;#"delays;@;"delays;i±o;%;![o;"	;#"
delay;@;"
delay;i±o;"	;#"
delay;@;"
delay;i±o;;i ;@;[ ;i±;["s;"0s;&{ ;@;"if;i±;'0;&{ ;@;"append;i±;'0;
[ o;;0;@;"webkit-value;i³;o;%;![o;"	;#"webkit_value;@;"webkit-value;i³o;%;![o;	;;1;[o;%;![o;	;"-webkit;@;;;i³o;"	;#"property;@;"property;i³;&{ ;@;"prefixed-for-transition;i³;'0o;"	;#"duration;@;"duration;i³o;"	;#"timing_function;@;"timing-function;i³;@;i³;&{ ;@;"compact;i³;'0;&{ ;@;"append;i³;'0;
[ o;;0;@;"moz-value;i´;o;%;![o;"	;#"moz_value;@;"moz-value;i´o;%;![o;	;;1;[	o;%;![o;	;"	-moz;@;;;i´o;"	;#"property;@;"property;i´;&{ ;@;"prefixed-for-transition;i´;'0o;"	;#"duration;@;"duration;i´o;"	;#"timing_function;@;"timing-function;i´o;"	;#"
delay;@;"
delay;i´;@;i´;&{ ;@;"compact;i´;'0;&{ ;@;"append;i´;'0;
[ o;;0;@;"o-value;iµ;o;%;![o;"	;#"o_value;@;"o-value;iµo;%;![o;	;;1;[	o;%;![o;	;"-o;@;;;iµo;"	;#"property;@;"property;iµ;&{ ;@;"prefixed-for-transition;iµ;'0o;"	;#"duration;@;"duration;iµo;"	;#"timing_function;@;"timing-function;iµo;"	;#"
delay;@;"
delay;iµ;@;iµ;&{ ;@;"compact;iµ;'0;&{ ;@;"append;iµ;'0;
[ :
@listo;"	;#"transitions;@;"transitions;i¢u;$Ý[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:@options{ :
@name"$experimental-support-for-webkit:
@linei¸0[o:Sass::Tree::PropNode:@valueo; 	;"webkit_value;@;"webkit-value;	i¸;@;["-webkit-transition;	i¸:@prop_syntax:new:@children[ :
@tabsi o:Sass::Tree::CommentNode
;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;@:
@type:silent;	i¹;[ u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:@underscored_name"has_delays:@options{ :
@name"has-delays:
@lineiº0[o:Sass::Tree::PropNode:@valueo; 	;"delays;@;"delays;	iº;@;["-webkit-transition-delay;	iº:@prop_syntax:new:@children[ :
@tabsi u;$#[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:@options{ :
@name"%experimental-support-for-mozilla:
@linei»0[o:Sass::Tree::PropNode:@valueo; 	;"moz_value;@;"moz-value;	i»;@;["-moz-transition;	i»:@prop_syntax:new:@children[ :
@tabsi u;$[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:@options{ :
@name"#experimental-support-for-opera:
@linei¼0[o:Sass::Tree::PropNode:@valueo; 	;"o_value;@;"o-value;	i¼;@;["-o-transition;	i¼:@prop_syntax:new:@children[ :
@tabsi o;(;o;"	;#"transitions;@;"transitions;i½;@;["transition;i½;);*;
[ ;+i ;'0o;
;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;@;;;iÀ;
[ o:Sass::Tree::FunctionNode;![[o;";#"	list;@;"	listo;	;;1;[ ;@;iÁ;@;"comma-list;iÁ;	T;
[o:Sass::Tree::ReturnNode	;@;iÂ;o;%;![o;	;;1;[ ;@;iÂo;"	;#"	list;@;"	list;iÂo;	;"
comma;@;;;iÂ;&{ ;@;"	join;iÂ;'0;
[ ;'0o;
;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;@;;;iÅ;
[ o;5;![[o;";#"prefix;@;"prefix0[o;";#"property;@;"property0;@;"prefixed-for-transition;iÆ;	T;
[u;$®[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"property:@options{ :
@name"property:
@lineiÇ:@keywords{ ;@;"type-of;iÇ:@splat0;@:@operator:eq;iÇ:@operand2o:Sass::Script::String	:@value"	list;@:
@type:identifier;iÇu:Sass::Tree::IfNodeY[00[u:Sass::Tree::IfNode9[o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"#transitionable_prefixed_values:@options{ :
@name"#transitionable-prefixed-values:
@lineiÎo;	;"property;	@
;
"property;iÎ:@keywords{ ;	@
;
"
index;iÎ:@splat0u:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:@options{ :
@lineiÑ:
@expro:Sass::Script::Variable	:@underscored_name"property;@:
@name"property;iÑ:@children[ [o:Sass::Tree::ReturnNode	;	@
;iÏ:
@expro: Sass::Script::Interpolation:	@mido;	;"prefix;	@
;
"prefix;iÏ:@whitespace_after0:@before0;	@
:@whitespace_beforei;iÏ:@aftero;;o;	;"property;	@
;
"property;iÏ;0;o;;o:Sass::Script::String	:@value"-;	@
:
@type:identifier;iÏ;F;0;	@
;0;iÏ;0:@originally_text:originally_text;	@
;0;iÏ;0;F;F:@children[ [o:Sass::Tree::VariableNode:@guarded0;@;"new-list;iÈ:
@expro;;[ ;{ ;@;"comma-list;iÈ;0:@children[ o:Sass::Tree::EachNode;@;iÉ:	@var"v:@has_childrenT;[o;;0;@;"new-list;iÊ;o;;[o;		;
"new_list;@;"new-list;iÊo;;[o;		;
"prefix;@;"prefix;iÊo;		;
"v;@;"v;iÊ;{ ;@;"prefixed-for-transition;iÊ;0;{ ;@;"append;iÊ;0;[ :
@listo;		;
"property;@;"property;iÉo:Sass::Tree::ReturnNode	;@;iÌ;o;		;
"new_list;@;"new-list;iÌ;[ ;'0o;
;["7/* Checks if the value given is a unit of time. */;@;;;iÖ;
[ o;5;![[o;";#"
value;@;"
value0;@;"is-time;i×;	T;
[u;$[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"
value:@options{ :
@name"
value:
@lineiØ:@keywords{ ;@;"type-of;iØ:@splat0;@:@operator:eq;iØ:@operand2o:Sass::Script::String	:@value"number;@:
@type:identifier;iØu:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:@options{ :
@lineiÛ:
@expro:Sass::Script::Bool:@valueF;@;iÛ:@children[ [o:Sass::Tree::ReturnNode	;@;iÙ:
@expro:!Sass::Script::UnaryOperation	;@:@operando;	;@;o;;[o:Sass::Script::List	:@separator:
space;[o;	;"s;@;;;iÙo;	;"ms;@;;;iÙ;@;iÙo;;[o;		;
"
value;@;"
value;iÙ;{ ;@;"	unit;iÙ;0;{ ;@;"
index;iÙ;0;:not;iÙ;;;iÙ:@children[ ;'0